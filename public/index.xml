<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steven Zhu</title>
    <link>http://www.stevenzhujr.com/</link>
    <description>Recent content on Steven Zhu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="http://www.stevenzhujr.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About me</title>
      <link>http://www.stevenzhujr.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.stevenzhujr.com/about/</guid>
      <description>I am a Sophomore studying computer engineering at the University of California, Santa Barbara.
Courses Link to heading Data Structures and Algorithms. (instructed in C++)
Object Oriented Design and Implementation. (instructed in C++)
Foundations of Analog and Digital Circuits and Systems.
I have academic experience in C++ and Java while learning Python and HTML independently.
Work Experience Link to heading I interned at a company named Trina Solar in the summer of 2022.</description>
    </item>
    
    <item>
      <title>Conrad&#39;s Game of Life</title>
      <link>http://www.stevenzhujr.com/projects/conrad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.stevenzhujr.com/projects/conrad/</guid>
      <description>This is my personal project implementing Conrad&amp;rsquo;s game of life. This project uses Java and works closely with the Java AWT library.
Github Link to heading https://github.com/stevenzhujr/Conrad/tree/main
Abstract Link to heading This personal project consists of code that simulates Conrad&amp;rsquo;s Game of Life using Java.The main goal of this project is to demonstrate my familiarity with Java as well as learn more about working with graphics.
Rules Link to heading The universe of the Game of Life is an infinite two-dimensional orthogonal grid of square cells, each of which is in one of two possible states, alive or dead, or &amp;ldquo;populated&amp;rdquo; or &amp;ldquo;unpopulated&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://www.stevenzhujr.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.stevenzhujr.com/contact/</guid>
      <description>Email: stevenzhu@ucsb.edu
Phone number: 669-241-9173</description>
    </item>
    
    <item>
      <title>Pingpong Rapid Defence Turret Repeater(PRDTR)</title>
      <link>http://www.stevenzhujr.com/projects/pingpong/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.stevenzhujr.com/projects/pingpong/</guid>
      <description>The Pingpong Rapid Defence Turret Repeater(PRDTR), or the Pingpong Ball Launcher project, was the final assignment of my ECE 5 course. I produced the launcher with two classmates, Vihan Jayaraman and Jerry Wang.
Abstract Link to heading The main goal of our project was to construct a device that shoots projectiles with multiple degrees of freedom. We mounted a ping-pong ball launcher on a tiltable mount, giving it 360 degrees of coverage in aim.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>http://www.stevenzhujr.com/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.stevenzhujr.com/projects/</guid>
      <description>Ping pong ball launcher
Weekly updating slides
Conrad&amp;rsquo;s game of life</description>
    </item>
    
    <item>
      <title>Weekly Slides Automation Project</title>
      <link>http://www.stevenzhujr.com/projects/slides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.stevenzhujr.com/projects/slides/</guid>
      <description>The Weekly Slides Automation Project was made during my internship at Trina.
Github Link to heading https://github.com/stevenzhujr/Slides
Abstract Link to heading The main goal of this project was to write a program that would update slides automatically every week. I used Python and its various libraries to fetch the needed elements from the web, process them, and then update the slides.
The code is composed of the following parts: Link to heading Webfetch: Using Selenium, I could open browsers remotely.</description>
    </item>
    
  </channel>
</rss>
